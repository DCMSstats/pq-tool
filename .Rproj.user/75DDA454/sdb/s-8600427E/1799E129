{
    "collab_server" : "",
    "contents" : "var log = true;\nvar points;\nvar point_centres = [];\nvar last_mouse_location = [0,0];\nvar selected_rank = -1;\nvar search_rows = 10;\nvar text_to_return = \"\";\n\n\n\n//Table-clicking function\n\nfunction format(d, questionMPCol, tab) {\n    console.log(d);\n    d[3] = d[3].replace(/&lt;(.+?)&gt;/g, '<' + '$1' + '>');\n    if(tab == 'search') {\n        buttonOne = '<button class=\\\"btn btn-info\\\" type = \\\"button\\\" onclick = \\\"mp_finder(\\'' + d[questionMPCol] + '\\')\\\">See all questions asked by<br>' + d[questionMPCol].replace(/([\\w\\s-]+), ([\\w\\s]+)/, '$2' + ' ' + '$1') + '</button>';\n        buttonTwo = '<button class=\\\"btn btn-info\\\" type = \\\"button\\\" onclick = \\\"topic_finder(' + d[9] + ')\\\">View topic ' + d[9] + '<br>(' + d[10] + ') </button>';\n    } else if (tab == 'topic') {\n        buttonOne = '<button class=\\\"btn btn-info\\\" type = \\\"button\\\" onclick = \\\"mp_finder(\\'' + d[questionMPCol] + '\\')\\\">See all questions asked by ' + d[questionMPCol].replace(/([\\w\\s-]+), ([\\w\\s]+)/, '$2' + ' ' + '$1') + '</button>';\n        buttonTwo = '<button class=\\\"btn btn-info\\\" type = \\\"button\\\" onclick = \\\"back_to_search()\\\">Back to search</button>';\n    } else if (tab == 'member') {\n        buttonOne = '<button class=\\\"btn btn-info\\\" type = \\\"button\\\" onclick = \\\"back_to_search()\\\">Back to search</button>';\n        buttonTwo = '<button class=\\\"btn btn-info\\\" type = \\\"button\\\" onclick = \\\"topic_finder(' + d[9] + ')\\\">View topic ' + d[9] + ' (' + d[10] + ') </button>';\n    }\n\n    return '<div style=\\\"background-color:#eee; padding: 1em; margin: 1em; word-wrap:break-word;\\\"><h4>Question</h4><p>' +\n                d[2] +\n                '</p><h4>Answer</h4><p>' + d[3] + '</p></div>' +\n                '<div class=\\\"container-fluid\\\">' +\n                '<div class=\\\"btn-group btn-group-justified\\\" role=\\\"group\\\">' +\n                '<div class=\\\"btn-group\\\" role=\\\"group\\\">' +\n                buttonOne +\n                '</div>' +\n                '<div class=\\\"btn-group\\\" role=\\\"group\\\">' +\n                buttonTwo +\n                '</div>' +\n                '</div>' +\n                '</div>';\n}\nvar questionMPCol;\nvar tab;\nvar search_table;\nvar topic_table;\nvar member_table;\n\nfunction rowActivate() {\n    //Set global variables depending on tab user is on.  \n    //The id of the active tab (div.active) ends in either a 1, 2, or 3 depending on the tab.\n    //This is the first thing to double check if this starts breaking.\n    var active_tab = $(\"div.active\")[0].getAttribute(\"id\").slice(-1)\n    tab = active_tab === \"1\" ? \"search\" : active_tab === \"2\" ? \"topic\" : \"member\" \n    console.log(tab)\n    var table1 = tab === \"search\" ? search_table : tab === \"topic\" ? topic_table : member_table;\n    questionMPCol = tab === \"search\" ? 6 : 4;\n    \n    \n    var row = this.closest('tr');\n    var showHideIcon = $(row.firstChild);\n    var shinyRow = table1.row(row);\n    if (shinyRow.child.isShown()) {\n        shinyRow.child.hide();\n        showHideIcon.html('&oplus;');\n    } else {\n        shinyRow.child(format(shinyRow.data(), questionMPCol, tab)).show();\n        showHideIcon.html('&ominus;');\n    }\n}\n\n//Plotly point-clicking functions\nfunction get_point_locations(e) {\n    last_mouse_location = [e.clientX, e.clientY];\n    if(!!similarity_plot){\n        if (e.path.indexOf(similarity_plot) > -1){\n            //console.log(e.clientX);\n            //console.log(e);\n            point_centres = [];\n            points = document.getElementsByClassName(\"points\")[0].children;\n            if (point_centres.length === 0){\n                \n                for (var p of points){\n                    let bounding_rect = p.getBoundingClientRect();\n                    let c_x = bounding_rect.left + bounding_rect.width/2;\n                    let c_y = bounding_rect.top + bounding_rect.height/2;\n                    point_centres.push({'centre' : [c_x, c_y], 'dist' : 0});\n                }\n            }\n        }\n    }\n    \n    var cc = document.getElementsByClassName(\"cursor-crosshair\")[0];\n    if(cc){\n        cc.addEventListener(\"mousedown\", find_nearest_point);\n    }\n    $(\"div.active\").keydown(table_check)\n}\n\n\nfunction find_nearest_point(e){\n    var mouse = last_mouse_location;\n    var current_min = 10000000;\n    var min_index = -1;\n    var current_index = 0;\n    point_centres.map(function(p_c){\n        var current_dist = mouse.dist(p_c.centre);\n        p_c.dist = current_dist;\n        if (current_dist < current_min){\n            current_min = current_dist;\n            min_index = current_index;\n        }\n        current_index++;\n    });\n    if (min_index === selected_rank){\n        selected_rank = -1;\n        return ;\n    }else{\n        selected_rank = min_index;\n    }\n    \n    return rank_to_selection(min_index + 1, search_rows);\n}\n\n\n\nArray.prototype.dist = function(b){\n    var x = this[0] - b[0];\n    var y = this[1] - b[1];\n    return x*x + y*y;\n};\n\n\nfunction rank_to_selection(rank, search_rows){\n    var page = rank % search_rows ? Math.floor(rank/search_rows) + 1 : rank/search_rows;\n    var row = rank % search_rows ? rank % search_rows : search_rows;\n    return goto_page(page, row);\n}\n\nfunction goto_page(i, row){\n    deselect_rows();\n    \n    var table_num = $(\"table\")[0].getAttribute(\"id\").split(/_/)[2];\n    var next = $(\"#DataTables_Table_\" + table_num + \"_next\")[0];\n    var previous = $(\"#DataTables_Table_\" + table_num + \"_previous\")[0];\n    var current_page = document.getElementsByClassName(\"current\")[0].innerHTML;\n    var page_shift = i - parseInt(current_page);\n    var buttons = $(\"a.paginate_button\");\n    var target;\n    var first_click_timeout = 200;\n    if (page_shift === 0){\n        return row_timeout(row);\n    }\n    //Page jumping logic\n    if(current_page <= 4){\n        //one click\n        target = [0,1,2,3,4,5,10].indexOf(i);\n        if( target > -1){\n            buttons[target].click();\n            return row_timeout(row);\n        }else{//two clicks\n            buttons[6].click(); //get to page 10\n            setTimeout(function(){\n                buttons = $(\"a.paginate_button\");\n                target = [0,1,6,7,8,9].indexOf(i);\n                buttons[target].click();\n                return row_timeout(row);\n            }, first_click_timeout);\n        }\n    }else if(current_page >= 7){\n        //one click\n        target = [0,1,6,7,8,9,10].indexOf(i);\n        if( target > -1){\n            buttons[target].click();\n            return row_timeout(row);\n        }else{//two clicks\n            buttons[1].click(); //get to page 1\n            setTimeout(function(){\n                buttons = $(\"a.paginate_button\");\n                target = [0,1,2,3,4,5].indexOf(i);\n                buttons[target].click();\n                return row_timeout(row);\n            }, first_click_timeout)\n        }\n    }else{//current_page in [5,6,7]\n        if (Math.abs(page_shift) === 1){\n            var button = page_shift > 0 ? next : previous;\n            button.click();\n        }else if(i < 5){\n            buttons[1].click(); //get to page 1\n            setTimeout(function(){\n                buttons = $(\"a.paginate_button\");\n                target = [0,1,2,3,4,5].indexOf(i);\n                buttons[target].click();\n                return row_timeout(row);\n            }, first_click_timeout)\n            \n        }else{\n            buttons[6].click(); //get to page 10\n            setTimeout(function(){\n                buttons = $(\"a.paginate_button\");\n                target = [0,6,7,8,9].indexOf(i);\n                buttons[target].click();\n                return row_timeout(row);\n            }, first_click_timeout);\n        }\n    }\n}\n\nfunction row_timeout(row){\n    setTimeout(function() {return toggle_row(row)}, 200);\n}\n\nfunction toggle_row(i){\n    var rows = i % 2 ? document.getElementsByClassName(\"odd\") : document.getElementsByClassName(\"even\");\n    var row = i % 2 ? Math.floor(i/2) : i/2 - 1;\n    rows[row].click();\n}\n\n\nfunction deselect_rows(){\n    var selected = document.getElementsByClassName(\"selected\");\n    for (var s = 0; s < selected.length; s++){\n        selected[s].click();\n    }\n}\n\n//function walkthrough_button_clicking(){\n//  debugger\n//  if (this._currentStep==6) {\n//    $(\".btn-info\")[0].trigger(\"mouseup\", function(){\n//      debugger\n//      setTimeout(function(){\n//          $(\".introjs-nextbutton\").click()\n//        }, 100)\n//      })\n//  }\n//}\n\n//Cluster selecting functions\n\n//Note the fixed indices in various things below (lines) - should be fine for now, but this is likely where any future errors may come from, supposing they do.\n\nfunction mp_finder(mp){\n    var mp_tab = $(\"a\")[2]; //find link to MP tab\n    mp_tab.click(); //click on link (takes us to MP tab)\n    var is_lords = mp.match(/^(Baron)|(Lord)|(The )|(Viscount)/); //determine if mp is in HoL or HoC\n    var radio_button = is_lords ? 0 : 1; //is_lords evalutes to true if above match is found, and false otherwise - returnin 0, 1 respectively\n    $(\".radio-inline\")[radio_button].click(); //Click the correct radio button, as determined by is_lords\n    \n    setTimeout(function(){ //timeout to give radio button click enough time to execute\n        $(\"#person_choice\").append(\"<option value='\" + mp + \"'>\" + mp + \"</option>\"); //append option to person dropdown (the mp you want)\n        $(\"#person_choice\").val(mp).change(); //change to new option\n        document.getElementsByClassName(\"item\")[1].innerHTML = mp; //change text in person dropdown\n        return; }, 500);\n}\n\nfunction topic_finder(topic){\n    var topic_tab = $(\"a\")[1]; //find link to topic tab\n    topic_tab.click(); //click on link (takes us to topic tab)\n    $(\"#topic_choice\").append(\"<option value='\" + topic + \"'>\" + topic + \"</option>\"); //append option to topic dropdown (the topic you want)\n    $(\"#topic_choice\").val(\"\"+topic).change(); //change to new option\n    document.getElementsByClassName(\"item\")[0].innerHTML = topic; //change text in topic dropdown\n}\n\nfunction back_to_search(){\n    var search_tab = $(\"a\")[0];\n    search_tab.click();\n}\n\n\n//Tidy up tab tables\n\nString.prototype.format_html = function(){\n    return this.replace(/&lt;(.+?)&gt;/g, '<' + '$1' + '>');\n};\n\nfunction table_check(){\n    var tableCheck = window.setInterval(empty_table, 20)\n    setTimeout(function(){\n        clearInterval(tableCheck)\n    }, 1000)\n}\n\nfunction empty_table(){\n    if(question.value.length === 0){\n        return;\n    }\n    if(!!similarity_table){\n        var page_links = $(\"#similarity_table\").find(\"a\")\n        if (page_links.length < 3){\n            page_links.remove()\n            $(\"#similarity_table\").find(\".dataTables_info\")[0].innerHTML = \"\"\n            $(\"#similarity_table\").find(\"th\")[0].innerHTML = \"\"\n            $(\"#similarity_table\").find(\"td\")[0].style['white-space'] = 'pre'\n            $(\"#similarity_table\").find(\"td\")[0].innerHTML = \"Sorry, no matches for that!\\nTry searching additional words, or checking for typos.\"\n        }\n    }\n}\n\n\nfunction tidy_table(){\n    //deprecated\n    //Find Answer_text column\n    var headers = $(\"div.active\").find(\"th.sorting\");\n    var hl = headers.length;\n    var answer_index = -1;\n    var table_entries = $(\"div.active\").find(\"td\");\n    var t_entries_length = table_entries.length;\n    for(var h of headers){\n        answer_index++;\n        if(h.innerHTML === \"Answer_Text\"){\n            break;\n        }\n    }\n    for(var i = 0; i < t_entries_length; i++){\n        if(i % hl !== answer_index){\n            continue;\n        }\n        var a_text = table_entries[i].innerHTML;\n        table_entries[i].innerHTML = a_text.format_html();\n    }\n}\n\n\n\n",
    "created" : 1502186321388.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "157955554",
    "id" : "1799E129",
    "lastKnownWriteTime" : 1502191687,
    "last_content_update" : 1502191687,
    "path" : "~/Git Repos/PQTool/pq.js",
    "project_path" : "pq.js",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "js"
}