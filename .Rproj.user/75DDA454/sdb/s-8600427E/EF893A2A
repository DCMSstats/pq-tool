{
    "collab_server" : "",
    "contents" : "source(file = \"global.R\")\n############# UI\n\n## Conditions\nsearchTextEntered = \"input.question.length > 0\"\ntableHasRows      = \"document.getElementsByClassName('dataTables_empty').length < 1\"\ntopicChosen       = \"input.topic_choice.length > 0\"\n\nnavbarPage(\"PQ Text Analysis\",\n           theme = shinytheme(\"spacelab\"),\n           footer = column(12, helpText(\n             \"Love the tool? Hate it? Got a suggestion to improve it? Found a bug? We'd love to hear from you\",\n             a(href=\"https://www.surveymonkey.co.uk/r/FV9PCT2\", target=\"_blank\", \"here\")\n           )\n           ),\n           \n           ########################### Search Tab\n           tabPanel(\"Search\",\n                    introjsUI(),\n                    tags$head(\n                      includeScript(\"google-analytics.js\"),\n                      tags$link(rel = \"stylesheet\", type = \"text/css\", href = \"pq.css\")\n                    ),\n                    tags$body(onmousemove = \"get_point_locations(event)\"),\n                    tags$head(includeScript(\"pq.js\")),\n                    fluidRow(\n                      column(8,\n                             strong(\"Welcome to the PQ Tool!\"),\n                             p(\"You can use this tool to search through our database of written PQs. Try \n                               typing some keywords (e.g. Prison Officers) or a new PQ into the search box \n                               below. You will get a ranked list of the 100 most similar past questions, and \n                               a visualisation showing when they were asked.\")\n                      )),\n                    \n                    fluidRow(\n                      column(4,\n                             introBox(\n                             textInput(\n                               inputId = \"question\",\n                               label = \"Search Text\",\n                               width = \"100%\",\n                               value = \"\",\n                               placeholder = \"Enter search text here\"\n                             ),\n                             data.step = 1,\n                             data.intro = \"Type some keywords (e.g. Prison Officers) or a new PQ into this box.\"\n                             ),\n                             bsTooltip(\"question\",\n                                       \"Enter a keyword/phrase to search our PQ database.\",\n                                       \"auto\",\n                                       options = list(container = \"body\")\n                             )\n                      ),\n                      \n                      column(2,\n                             conditionalPanel(\n                               condition = searchTextEntered,\n                               introBox(\n                               dateRangeInput(\n                                 \"q_date_range\", \n                                 label = \"Question Date Range\",\n                                 format = \"dd-mm-yyyy\",\n                                 min = min(data$Date),\n                                 max = max(data$Date),\n                                 start = min(data$Date),\n                                 end = max(data$Date)\n                               ),\n                               data.step = 2,\n                               data.position = \"right\",\n                               data.intro = \"Pick a range of dates you want to consider (leave this the way it is to search all the questions we have)\"\n                               ),\n                               bsTooltip(\"q_date_range\",\n                                         \"Choose the time period you wish to search.\",\n                                         \"auto\",\n                                         options = list(container = \"body\")\n                               )\n                             )\n                      ),\n                      column(2,\n                             offset = 4,\n                             actionButton(\n                               \"tutorial_button\",\n                               \"Click here for a quick tour\",\n                               class=\"btn btn-primary\"\n                             ),\n                             bsTooltip(\"tutorial_button\",\n                                \"If this is your first time using the tool, click here to complete a quick tutorial\",\n                                \"auto\")\n                             )\n                    ),\n                    \n                    fluidRow(\n                      column(6,\n                             conditionalPanel(\n                               condition = searchTextEntered,\n                               introBox(\n                               introBox(\n                               introBox(\n                               introBox(\n                               dataTableOutput(\"similarity_table\"),\n                               data.step = 3,\n                               data.position = \"right\",\n                               data.intro = \"This table shows the top 100 PQs that are most similar to your search terms. <br> <br>\n                               Click on one of the rows to see the question and answer text.\"),\n                               data.step = 6,\n                               data.position = \"right\",\n                               data.intro = \"The question you selected on the graph has now been opened in the table.\"),\n                               data.step = 7,\n                               data.position = \"right\",\n                               data.intro = \"You can see all the questions asked by this MP by clicking the 'See all questions asked by' button. \n                               <br> <br> Try it!\"),\n                               data.step = 12,\n                               data.position = \"right\",\n                               data.intro = \"All the questions in our database have been grouped into topics by an algorithm. These topics have been given a\n                               number and three 'Topic Keywords' to give an idea of what the topic is about.<br> <br> Click the 'View topic' button to look\n                               at all the questions in this topic.\")\n                             )\n                      ),\n                      column(6,\n                             conditionalPanel(\n                               condition = paste0(tableHasRows, '&&', searchTextEntered),\n                               introBox(\n                               introBox(\n                               plotlyOutput(\"similarity_plot\", height = 500),\n                               data.step = 4,\n                               data.position = \"left\",\n                               data.intro = \"This graph plots the PQs from the table and when they were asked. <br> <br> Each \n                               point represents a PQ, with the height showing how similar the question is to your search terms (higher = more similar)\"),\n                               data.step = 5,\n                               data.position = \"left\",\n                               data.intro = \"The grey line shows an average of parliamentary interest in the search terms. <br> <br>\n                               The red point is highlighting the question you previously chose from the table. <br> Try \n                               clicking another point to highlight instead.\")\n                      )\n                      )\n                    )\n           ),\n           \n           ########################### Topic Tab\n           tabPanel(\"Topic Analysis\",\n                    fluidRow(\n                      column(3,\n                             selectizeInput(inputId = \"topic_choice\",\n                                            label = \"Choose Topic Number:\",\n                                            choices = unique(data$Topic)),\n                             bsTooltip(\n                               \"topic_choice\",\n                               \"Enter a topic number from the previous page.\n              You can do this by selecting a number from\n              the dropdown or simply type it ins.\",\n                               \"right\",\n                               options = list(container = \"body\")\n                             )\n                      ),\n                      column(1,\n                             offset = 7,\n                             actionButton(\n                               \"explanation_button\",\n                               \"What do these topics mean?\",\n                               class=\"btn btn-primary\"\n                             )\n                      )\n                    ),\n                    \n                    conditionalPanel(\n                      condition = topicChosen,\n                      fluidRow(\n                        column(4, \n                               introBox(\n                               plotOutput(\"wordcloud\"),\n                               data.step = 13,\n                               data.position = \"right\",\n                               data.intro = \"This plot shows when the questions in the topic were asked. <br> The x axis shows the date\n                               when questions were asked and the y axis shows the count of questions asked on that date.\")\n                               ),\n                        column(8, \n                               introBox(\n                                 plotOutput(\"topic_plot\"),\n                                 data.step = 14, \n                                 data.position = \"left\",\n                                 data.intro = \"This plot shows when the questions in the topic were asked. <br> The x axis shows the date\n                              when questions were asked and the y axis shows the count of questions asked on that date.\")\n                      )),\n                      fluidRow(\n                        introBox(\n                        introBox(\n                        dataTableOutput(\"topic_documents\"),\n                        data.step = 15,\n                        data.position = \"right\",\n                        data.intro = \"This table contains all of the information on the questions asked on this topic.<br>\",\n                        \"Click on a row to see the corresponding question and answer text.\"),\n                        data.step = 16,\n                        data.position = \"top\",\n                        data.intro = \"That's it! You have made it to the end of the tutorial! <br><br> We hope this was useful, and if you have any\n                        feedback on this tutorial, or the tool in general, please see the link at the bottom of the page.\")\n                      )\n                    )\n           ),\n           \n           ########################### Member tab\n           tabPanel(\"Member Analysis\",\n                    fluidRow(\n                      column(2,\n                             radioButtons(\n                               inputId = \"member_analysis\",\n                               label = \"Choose a House:\",\n                               choices = c(\"Lords\", \"Commons\"),\n                               inline = TRUE\n                             )\n                      ),\n                      column(3,\n                             uiOutput(\"member_ui\"),\n                             bsTooltip(\n                               \"person_choice\",\n                               \"Now you have chosen a house, choose an MP/Peer. You can do this by\n          selecting one from the dropdown or simply typing their name into the box.\",\n                               \"right\",\n                               options = list(container = \"body\")\n                             )\n                      )\n                    ),\n                    \n                    fluidRow(\n                      column(4, \n                             introBox(\n                             plotOutput(\"member_wordcloud\"),\n                             data.step = 8,\n                             data.position = \"right\",\n                             data.intro = \"This wordcloud shows the words that are most important in the questions\n                             asked by this member.<br><br> The bigger the word, the more important it is.\")\n                              ),\n                      column(8,\n                             introBox(\n                             plotOutput(\"member_plot\"),\n                             data.step = 9,\n                             data.position = \"left\",\n                             data.intro = \"This plot shows when questions were asked by the selected member. <br><br>\n                             The x axis shows the date when questions were asked and the y axis shows the count of questions asked on that date.\")\n                             )\n                    ),\n                    \n                    fluidRow(\n                       introBox(\n                       introBox(\n                        dataTableOutput(\"member_table\"),\n                        data.step = 10,\n                        data.position = \"top\",\n                        data.intro = \"This table contains all of the information on the questions asked by this member.<br><br>\n                        As with the table on the first page, click on a row to see the corresponding question and answer text.\"),\n                      data.step = 11,\n                      data.position = \"top\",\n                      data.intro = \"You can now navigate back to the first page by clicking on a row then clicking on the 'Back to Search' button.\")\n           )\n           )\n)\n",
    "created" : 1502186316873.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "348330108",
    "id" : "EF893A2A",
    "lastKnownWriteTime" : 1502192047,
    "last_content_update" : 1502192047811,
    "path" : "~/Git Repos/PQTool/ui.R",
    "project_path" : "ui.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}